---
description: 
globs: 
alwaysApply: false
---
# Pythfinder "던전 앤 디스코드" 개발 규칙

이 문서는 Pythfinder 봇의 `TextRPG` cog, 일명 "던전 앤 디스코드" 게임 개발을 위한 AI 협업 가이드입니다.

## 1. 프로젝트 개요 및 목표

- **프로젝트**: Discord 봇에 텍스트 기반 클래식 로그라이크 게임 기능 추가.
- **핵심 철학**: 하드코어한 재미, 높은 재플레이 가치, 플레이어의 신중한 선택을 요구하는 깊이 있는 전략성.
- **주요 소스 파일**: `cogs/text_rpg.py`

## 2. 핵심 게임 디자인 (Source of Truth: `docs/game_design_detail.md`)

**AI는 기능 개발 (코드 작성) 전 반드시 `game_design_detail.md` 문서를 참조하여 기획 의도를 파악해야 합니다.**

## 3. 개발 워크플로우

### 3.1. 정적 데이터 추가/수정 (아이템, 몬스터, 계약 등)

1.  **버전 상수 수정**: `cogs/text_rpg.py` 상단의 관련 데이터 버전 상수(예: `LATEST_ITEM_VERSION`) 값을 1 증가시킵니다.
2.  **SQL 스크립트 작성**: `sql/updates/` 디렉토리에 `[데이터타입]_v[새 버전].sql` 형식의 파일을 생성하고 쿼리를 작성합니다.

### 3.2. 새로운 기능 또는 명령어 구현

1.  **기획 문서 확인**: `docs/game_design_detail.md` 와 `docs/game_plan.md`를 통해 기능 명세를 숙지합니다.
2.  **문서 갱신**: 새로 추가하거나 갱신할 기능을 미리 해당 문서들에 추가/갱신하여 작성합니다.
3.  **코드 작성**: `cogs/text_rpg.py`에 주 로직을 구현합니다.
4.  **테스트 수행 가이드라인 작성**: `docs/testing_guide.md`에 구현된 기능을 테스트하기위한 절차를 명시합니다.
5.  **개발자 가이드라인 문서 갱신**: 일련의 과정에서 바뀐 점들을 `docs/developer_guide.md`에 반영하여 개발자들이 읽기 쉽게 합니다.

## 4. 중요 파일 목록

- `docs/game_design_detail.md`: **(최우선 필독)** 게임 디자인의 최종 결정본. 모든 기획의 기준이 됩니다.
- `docs/game_plan.md`: 개발 로드맵 및 개요.
- `docs/developer_guide.md`: 개발자를 위한 기술적 가이드라인.
- `docs/testing_guide.md`: 기능 추가 및 수정 후 따라야 할 테스트 절차 및 QA 가이드라인.
- `cogs/text_rpg.py`: 게임의 메인 로직.
- `cogs/database.py`: 데이터베이스 연결 및 자동 업데이트 로직.
- `sql/create_game_tables.sql`: 기본 테이블 구조 정의.
- `sql/updates/`: 데이터 버전 관리용 SQL 스크립트 저장소.

## 5. 코딩 컨벤션 및 규칙

- **DB 접근**: `DatabaseManager` 클래스를 통해서만 DB에 접근합니다. SQL 쿼리에는 항상 파라미터화된 쿼리 (`$1`, `$2`...)를 사용하여 SQL 인젝션을 방지합니다.
- **에러 처리**: 사용자에게 보여주는 오류는 `ephemeral=True`를 사용해 간결하게 전달하고, 상세한 오류 정보는 `sentry_sdk`로 로깅합니다.
- **응답 언어**: 사용자와의 모든 대화는 **한국어**로 진행합니다. 
